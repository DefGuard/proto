syntax = "proto3";
package enrollment;

import "google/protobuf/empty.proto";

message EnrollmentStartRequest {
  string token = 1;
}

message AdminInfo {
  string name = 1;
  optional string phone_number = 2;
  string email = 3;
}

message InitialUserInfo {
  string first_name = 1;
  string last_name = 2;
  string login = 3;
  string email = 4;
  optional string phone_number = 5;
  bool is_active = 6;
  repeated string device_names = 7;
}

message EnrollmentStartResponse {
  AdminInfo admin = 1;
  InitialUserInfo user = 2;
  int64 deadline_timestamp = 3;
  string final_page_content = 5;
  bool vpn_setup_optional = 6;
  InstanceInfo instance = 7;
}

message ActivateUserRequest {
  string phone_number = 1;
  string password = 2;
}

message NewDevice {
  string name = 1;
  string pubkey = 2;
}

message Device {
  int64 id = 1;
  string name = 2;
  string pubkey = 3;
  int64 user_id = 4;
  int64 created_at = 5;
}

message DeviceConfig {
  int64 network_id = 1;
  string network_name = 2;
  string config = 3;
  string endpoint = 4;
  string assigned_ip = 5;
  // network pubkey
  string pubkey = 6;
  string allowed_ips = 7;
  optional string dns = 8;
  bool mfa_enabled = 9;
  int32 keepalive_interval = 10;
}

message InstanceInfo {
  string id = 1;
  string name = 2;
  string url = 3;
  string proxy_url = 4;
  string username = 5;
}

message DeviceConfigResponse {
  Device device = 1;
  repeated DeviceConfig configs = 2;
  InstanceInfo instance = 3;

}

message ExistingDevice {
  string pubkey = 1;
}

service EnrollmentService {
  rpc StartEnrollment (EnrollmentStartRequest) returns (EnrollmentStartResponse);
  rpc ActivateUser (ActivateUserRequest) returns (google.protobuf.Empty);
  rpc CreateDevice (NewDevice) returns (DeviceConfigResponse);
  rpc GetNetworkInfo (ExistingDevice) returns (DeviceConfigResponse);
}
